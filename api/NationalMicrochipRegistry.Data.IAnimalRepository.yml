### YamlMime:ManagedReference
items:
- uid: NationalMicrochipRegistry.Data.IAnimalRepository
  commentId: T:NationalMicrochipRegistry.Data.IAnimalRepository
  id: IAnimalRepository
  parent: NationalMicrochipRegistry.Data
  children: []
  langs:
  - csharp
  - vb
  name: IAnimalRepository
  nameWithType: IAnimalRepository
  fullName: NationalMicrochipRegistry.Data.IAnimalRepository
  type: Interface
  source:
    remote:
      path: Data/IAnimalRepository.cs
      branch: master
      repo: https://github.com/Ethan-Hodgson/BIT706_AS3
    id: IAnimalRepository
    path: Data/IAnimalRepository.cs
    startLine: 7
  assemblies:
  - NationalMicrochipRegistry
  namespace: NationalMicrochipRegistry.Data
  summary: "\nInterface for managing animal-related data operations.\n"
  example: []
  syntax:
    content: 'public interface IAnimalRepository : IRepository<Animal>'
    content.vb: >-
      Public Interface IAnimalRepository
          Inherits IRepository(Of Animal)
  inheritedMembers:
  - NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetAllAsync
  - NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetByIdAsync(System.Int32)
  - NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.AddAsync(NationalMicrochipRegistry.Models.Animal)
  - NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.UpdateAsync(NationalMicrochipRegistry.Models.Animal)
  - NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.DeleteAsync(System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: NationalMicrochipRegistry.Data
  commentId: N:NationalMicrochipRegistry.Data
  name: NationalMicrochipRegistry.Data
  nameWithType: NationalMicrochipRegistry.Data
  fullName: NationalMicrochipRegistry.Data
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetAllAsync
  commentId: M:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetAllAsync
  parent: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  definition: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<Animal>.GetAllAsync()
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.GetAllAsync()
  nameWithType.vb: IRepository(Of Animal).GetAllAsync()
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).GetAllAsync()
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
    name: GetAllAsync
    nameWithType: IRepository<Animal>.GetAllAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
    name: GetAllAsync
    nameWithType: IRepository(Of Animal).GetAllAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetByIdAsync(System.Int32)
  commentId: M:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.GetByIdAsync(System.Int32)
  parent: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  definition: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
  name: GetByIdAsync(Int32)
  nameWithType: IRepository<Animal>.GetByIdAsync(Int32)
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.GetByIdAsync(System.Int32)
  nameWithType.vb: IRepository(Of Animal).GetByIdAsync(Int32)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).GetByIdAsync(System.Int32)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    nameWithType: IRepository<Animal>.GetByIdAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    nameWithType: IRepository(Of Animal).GetByIdAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.AddAsync(NationalMicrochipRegistry.Models.Animal)
  commentId: M:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.AddAsync(NationalMicrochipRegistry.Models.Animal)
  parent: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  definition: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
  name: AddAsync(Animal)
  nameWithType: IRepository<Animal>.AddAsync(Animal)
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.AddAsync(NationalMicrochipRegistry.Models.Animal)
  nameWithType.vb: IRepository(Of Animal).AddAsync(Animal)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).AddAsync(NationalMicrochipRegistry.Models.Animal)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
    name: AddAsync
    nameWithType: IRepository<Animal>.AddAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
    name: AddAsync
    nameWithType: IRepository(Of Animal).AddAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.UpdateAsync(NationalMicrochipRegistry.Models.Animal)
  commentId: M:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.UpdateAsync(NationalMicrochipRegistry.Models.Animal)
  parent: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  definition: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
  name: UpdateAsync(Animal)
  nameWithType: IRepository<Animal>.UpdateAsync(Animal)
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.UpdateAsync(NationalMicrochipRegistry.Models.Animal)
  nameWithType.vb: IRepository(Of Animal).UpdateAsync(Animal)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).UpdateAsync(NationalMicrochipRegistry.Models.Animal)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: IRepository<Animal>.UpdateAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: IRepository(Of Animal).UpdateAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.DeleteAsync(System.Int32)
  commentId: M:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}.DeleteAsync(System.Int32)
  parent: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  definition: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
  name: DeleteAsync(Int32)
  nameWithType: IRepository<Animal>.DeleteAsync(Int32)
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.DeleteAsync(System.Int32)
  nameWithType.vb: IRepository(Of Animal).DeleteAsync(Int32)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).DeleteAsync(System.Int32)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
    name: DeleteAsync
    nameWithType: IRepository<Animal>.DeleteAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
    name: DeleteAsync
    nameWithType: IRepository(Of Animal).DeleteAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
  commentId: M:NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<T>.GetAllAsync()
  fullName: NationalMicrochipRegistry.Data.IRepository<T>.GetAllAsync()
  nameWithType.vb: IRepository(Of T).GetAllAsync()
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T).GetAllAsync()
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
    name: GetAllAsync
    nameWithType: IRepository<T>.GetAllAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<T>.GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetAllAsync
    name: GetAllAsync
    nameWithType: IRepository(Of T).GetAllAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of T).GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  commentId: T:NationalMicrochipRegistry.Data.IRepository{NationalMicrochipRegistry.Models.Animal}
  parent: NationalMicrochipRegistry.Data
  definition: NationalMicrochipRegistry.Data.IRepository`1
  name: IRepository<Animal>
  nameWithType: IRepository<Animal>
  fullName: NationalMicrochipRegistry.Data.IRepository<NationalMicrochipRegistry.Models.Animal>
  nameWithType.vb: IRepository(Of Animal)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of NationalMicrochipRegistry.Models.Animal)
  name.vb: IRepository(Of Animal)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: NationalMicrochipRegistry.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: NationalMicrochipRegistry.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NationalMicrochipRegistry.Models.Animal
    name: Animal
    nameWithType: Animal
    fullName: NationalMicrochipRegistry.Models.Animal
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
  commentId: M:NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
  isExternal: true
  name: GetByIdAsync(Int32)
  nameWithType: IRepository<T>.GetByIdAsync(Int32)
  fullName: NationalMicrochipRegistry.Data.IRepository<T>.GetByIdAsync(System.Int32)
  nameWithType.vb: IRepository(Of T).GetByIdAsync(Int32)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T).GetByIdAsync(System.Int32)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    nameWithType: IRepository<T>.GetByIdAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<T>.GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.GetByIdAsync(System.Int32)
    name: GetByIdAsync
    nameWithType: IRepository(Of T).GetByIdAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of T).GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
  commentId: M:NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
  name: AddAsync(T)
  nameWithType: IRepository<T>.AddAsync(T)
  fullName: NationalMicrochipRegistry.Data.IRepository<T>.AddAsync(T)
  nameWithType.vb: IRepository(Of T).AddAsync(T)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T).AddAsync(T)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
    name: AddAsync
    nameWithType: IRepository<T>.AddAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<T>.AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.AddAsync(`0)
    name: AddAsync
    nameWithType: IRepository(Of T).AddAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of T).AddAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
  commentId: M:NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
  name: UpdateAsync(T)
  nameWithType: IRepository<T>.UpdateAsync(T)
  fullName: NationalMicrochipRegistry.Data.IRepository<T>.UpdateAsync(T)
  nameWithType.vb: IRepository(Of T).UpdateAsync(T)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T).UpdateAsync(T)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: IRepository<T>.UpdateAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<T>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: IRepository(Of T).UpdateAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of T).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
  commentId: M:NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
  isExternal: true
  name: DeleteAsync(Int32)
  nameWithType: IRepository<T>.DeleteAsync(Int32)
  fullName: NationalMicrochipRegistry.Data.IRepository<T>.DeleteAsync(System.Int32)
  nameWithType.vb: IRepository(Of T).DeleteAsync(Int32)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T).DeleteAsync(System.Int32)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
    name: DeleteAsync
    nameWithType: IRepository<T>.DeleteAsync
    fullName: NationalMicrochipRegistry.Data.IRepository<T>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1.DeleteAsync(System.Int32)
    name: DeleteAsync
    nameWithType: IRepository(Of T).DeleteAsync
    fullName: NationalMicrochipRegistry.Data.IRepository(Of T).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NationalMicrochipRegistry.Data.IRepository`1
  commentId: T:NationalMicrochipRegistry.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: NationalMicrochipRegistry.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: NationalMicrochipRegistry.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: NationalMicrochipRegistry.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: NationalMicrochipRegistry.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NationalMicrochipRegistry.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: NationalMicrochipRegistry.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
