// <auto-generated />
using System;
using MicrochipRegistry.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace National_Microchip_Registry.Migrations
{
    [DbContext(typeof(RegistryDbContext))]
    [Migration("20250121045553_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("MicrochipRegistry.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MicrochipId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AnimalId");

                    b.HasIndex("MicrochipId")
                        .IsUnique();

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Clinic", b =>
                {
                    b.Property<int>("ClinicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ClinicId");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Microchip", b =>
                {
                    b.Property<int>("MicrochipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClinicId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("MicrochipId");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Microchips");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Animal", b =>
                {
                    b.HasOne("MicrochipRegistry.Models.Microchip", "Microchip")
                        .WithOne("Animal")
                        .HasForeignKey("MicrochipRegistry.Models.Animal", "MicrochipId");

                    b.Navigation("Microchip");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Microchip", b =>
                {
                    b.HasOne("MicrochipRegistry.Models.Clinic", "Clinic")
                        .WithMany("Microchips")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Clinic", b =>
                {
                    b.Navigation("Microchips");
                });

            modelBuilder.Entity("MicrochipRegistry.Models.Microchip", b =>
                {
                    b.Navigation("Animal")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
